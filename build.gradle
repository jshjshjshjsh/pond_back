plugins {
	id 'java'
	
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'java-library'
	id "org.sonarqube" version "5.1.0.4882" // SonarQube 플러그인 추가
}

group = 'com.itjamz'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

// SonarQube(SonarCloud) 설정을 추가
sonarqube {
	properties {
		property "sonar.projectKey", "jshjshjshjsh_pond_back" // SonarCloud 프로젝트 키
		property "sonar.organization", "jshjshjshjsh"       // SonarCloud 조직 이름
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Spring Security
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	// Redission을 위한 Redis
	implementation 'org.redisson:redisson-spring-boot-starter:3.27.2'

	// 테스트를 위한 H2 데이터베이스 추가
	testRuntimeOnly 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'com.h2database:h2'

	// 테스트를 위한 redis 주입
	testImplementation "org.testcontainers:testcontainers:1.19.8"
	testImplementation "org.testcontainers:junit-jupiter:1.19.8"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

tasks.named('test') {
	useJUnitPlatform()
}
